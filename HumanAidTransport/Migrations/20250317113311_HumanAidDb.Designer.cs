// <auto-generated />
using System;
using HumanitarianTransport.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HumanAidTransport.Migrations
{
    [DbContext(typeof(HumanitarianDbContext))]
    [Migration("20250317113311_HumanAidDb")]
    partial class HumanAidDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Carrier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Contacts")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dimensions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfilePhotoURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehicleModel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehicleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehicleNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Carriers");
                });

            modelBuilder.Entity("CarrierRating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CarrierId")
                        .HasColumnType("int");

                    b.Property<int>("NotificationId")
                        .HasColumnType("int");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CarrierId");

                    b.ToTable("CarrierRatings");
                });

            modelBuilder.Entity("DeliveryRequest", b =>
                {
                    b.Property<int>("DeliveryRequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DeliveryRequestId"));

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("CarrierContacts")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CarrierId")
                        .HasColumnType("int");

                    b.Property<int?>("CarrierRating")
                        .HasColumnType("int");

                    b.Property<string>("Dimensions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HumanAidId")
                        .HasColumnType("int");

                    b.Property<string>("HumanAidName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HumanitarianAidHumanAidId")
                        .HasColumnType("int");

                    b.Property<string>("VehicleModel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehicleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehicleNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("VolunteerId")
                        .HasColumnType("int");

                    b.HasKey("DeliveryRequestId");

                    b.HasIndex("CarrierId");

                    b.HasIndex("HumanitarianAidHumanAidId");

                    b.HasIndex("VolunteerId");

                    b.ToTable("DeliveryRequests");
                });

            modelBuilder.Entity("HumanAidTransport.Models.HumanitarianAid", b =>
                {
                    b.Property<int>("HumanAidId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HumanAidId"));

                    b.Property<int?>("CarrierId")
                        .HasColumnType("int");

                    b.Property<string>("DeliveryAddressFrom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeliveryAddressTo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExpectedDeliveryTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Payment")
                        .HasColumnType("float");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VolunteerId")
                        .HasColumnType("int");

                    b.HasKey("HumanAidId");

                    b.HasIndex("CarrierId");

                    b.HasIndex("VolunteerId");

                    b.ToTable("HumanitarianAids");
                });

            modelBuilder.Entity("HumanAidTransport.Models.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CarrierId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VolunteerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VolunteerId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("HumanAidTransport.Models.TransportOrder", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<string>("DeliveryAddressFrom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeliveryAddressTo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DeliveryRequestId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ExpectedDeliveryTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("HumanAidId")
                        .HasColumnType("int");

                    b.Property<int?>("HumanitarianAidHumanAidId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Payment")
                        .HasColumnType("float");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VolunteerId")
                        .HasColumnType("int");

                    b.HasKey("OrderId");

                    b.HasIndex("HumanitarianAidHumanAidId");

                    b.ToTable("TransportOrders");
                });

            modelBuilder.Entity("Volunteer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfilePhotoURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Volunteers");
                });

            modelBuilder.Entity("CarrierRating", b =>
                {
                    b.HasOne("Carrier", "Carrier")
                        .WithMany("Ratings")
                        .HasForeignKey("CarrierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Carrier");
                });

            modelBuilder.Entity("DeliveryRequest", b =>
                {
                    b.HasOne("Carrier", "Carrier")
                        .WithMany()
                        .HasForeignKey("CarrierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HumanAidTransport.Models.HumanitarianAid", "HumanitarianAid")
                        .WithMany()
                        .HasForeignKey("HumanitarianAidHumanAidId");

                    b.HasOne("Volunteer", "Volunteer")
                        .WithMany("DeliveryRequests")
                        .HasForeignKey("VolunteerId");

                    b.Navigation("Carrier");

                    b.Navigation("HumanitarianAid");

                    b.Navigation("Volunteer");
                });

            modelBuilder.Entity("HumanAidTransport.Models.HumanitarianAid", b =>
                {
                    b.HasOne("Carrier", null)
                        .WithMany("AvailableTasks")
                        .HasForeignKey("CarrierId");

                    b.HasOne("Volunteer", null)
                        .WithMany("Tasks")
                        .HasForeignKey("VolunteerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HumanAidTransport.Models.Notification", b =>
                {
                    b.HasOne("Volunteer", "Volunteer")
                        .WithMany()
                        .HasForeignKey("VolunteerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Volunteer");
                });

            modelBuilder.Entity("HumanAidTransport.Models.TransportOrder", b =>
                {
                    b.HasOne("HumanAidTransport.Models.HumanitarianAid", "HumanitarianAid")
                        .WithMany()
                        .HasForeignKey("HumanitarianAidHumanAidId");

                    b.Navigation("HumanitarianAid");
                });

            modelBuilder.Entity("Carrier", b =>
                {
                    b.Navigation("AvailableTasks");

                    b.Navigation("Ratings");
                });

            modelBuilder.Entity("Volunteer", b =>
                {
                    b.Navigation("DeliveryRequests");

                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
